plugins {
	id 'java'
	id 'org.springframework.boot' version '2.7.14'
	id 'io.spring.dependency-management' version '1.0.15.RELEASE'
	id 'org.asciidoctor.jvm.convert' version '3.3.2'
}

group = 'com.woochacha'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '11'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	//Rest docs
	asciidoctorExt
}

// snippetsDir : 테스트 실행시 생성되는 응답을 저장할 디렉토리 지정
ext {
	snippetsDir = file('build/generated-snippets')
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'io.jsonwebtoken:jjwt:0.9.1'
	implementation 'org.modelmapper:modelmapper:2.3.0'
	implementation 'net.nurigo:sdk:4.3.0'

	implementation 'com.amazonaws:aws-java-sdk-qldb:1.12.7'
	implementation 'software.amazon.ion:ion-java:1.5.1'
	implementation 'software.amazon.qldb:amazon-qldb-driver-java:2.3.1'

	implementation 'com.fasterxml.jackson.dataformat:jackson-dataformat-ion:2.13.5'
	implementation group: 'org.apache.commons', name: 'commons-text', version: '1.10.0'
	implementation 'org.slf4j:jcl-over-slf4j:'

	implementation 'com.querydsl:querydsl-core'
	implementation 'com.querydsl:querydsl-jpa'
	implementation 'com.querydsl:querydsl-apt'
    testImplementation 'org.projectlombok:lombok:1.18.28'

	annotationProcessor "com.querydsl:querydsl-apt:${dependencyManagement.importedProperties['querydsl.version']}:jpa"
	annotationProcessor 'jakarta.persistence:jakarta.persistence-api'
	annotationProcessor 'jakarta.annotation:jakarta.annotation-api'

	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
//	asciidoctorExt "org.springframework.restdocs:spring-restdocs-asciidoctor"
	testImplementation 'org.springframework.security:spring-security-test'

	implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.2.6.RELEASE'
	implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.13.0'
}

// test 할 때 snippetsDir에 생성된 응답을 asciidoctor로 변환하여 .adoc 파일 생성
test {
	useJUnitPlatform()
	outputs.dir snippetsDir
}

// asciidoctor 실행 전에 실행
// 기존에 있던 API 문서를 삭제
asciidoctor.doFirst {
	delete file('src/main/resources/static')
}

// asciidoctor를 사용하기 위해서 asciidoctor task에 asciidoctorExt 설정
asciidoctor {
	inputs.dir snippetsDir
	configurations 'asciidoctorExt'
	dependsOn test
}

// asciidoctor task 실행시 생성된 html 파일을 src/main/resources/static 디렉토리에 복사
tasks.register('copyDocument', Copy) {
	dependsOn asciidoctor
	from file("build/docs/asciidoc")
	into file("src/main/resources/static/docs")
}

def querydslSrcDir = 'src/main/generated'
clean {
	delete file(querydslSrcDir)
}

sourceSets {
	main {
		java {
			srcDirs += [ querydslSrcDir ]
		}
	}
}

// jar 파일 생성 : src/docs/asciidoc --복사--> src/main/resources/static
bootJar {
	dependsOn copyDocument
	from ("build/docs/asciidoc") {
		into 'src/main/resources/static/docs'
	}
}

// 빌드 전에 copyDocument task 실행
build {
	dependsOn copyDocument
}

